@using WebDoctors.Data
@inject SignInManager<Person> SignInManager
@inject UserManager<Person> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    @if (User.IsInRole("Doctor"))
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.DoctorProfileNavClass(ViewContext)" id="email" asp-page="./DoctorProfile">Doctor Profile</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.DoctorScheduleNavClass(ViewContext)" id="email" asp-page="./DoctorSchedule">Doctor Schedule</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>*@
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
</ul>
